// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ODataBookStore.Models;

#nullable disable

namespace ODataBookStore.Migrations
{
    [DbContext(typeof(BookStoreContext))]
    partial class BookStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ODataBookStore.Models.Address", b =>
                {
                    b.Property<string>("City")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("City");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            City = "HCM City",
                            Street = "D2, Thu Duc District"
                        },
                        new
                        {
                            City = "Ha Noi City",
                            Street = "D3, Thu Duc District"
                        },
                        new
                        {
                            City = "Da Nang City",
                            Street = "D1, Thu Duc District"
                        },
                        new
                        {
                            City = "Quy Nhon City",
                            Street = "D6, Thu Duc District"
                        });
                });

            modelBuilder.Entity("ODataBookStore.Models.Role", r =>
            {
                r.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(r.Property<int>("Id"), 1L, 1);

                r.Property<string>("RoleName")
                    .IsRequired()
                    .HasColumnType("nvarchar(50)");

                r.HasKey("Id");

                r.ToTable("Roles");

                r.HasData(
                    new
                    {
                        Id = 1,
                        Rolename = "Account"
                    },
                    new
                    {
                        Id = 2,
                        Rolename = "User"
                    });
            });

            modelBuilder.Entity("ODataBookStore.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PressId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationName");

                    b.HasIndex("PressId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Mark Michaelis",
                            ISBN = "978-0-321-87758-1",
                            LocationName = "HCM City",
                            PressId = 1,
                            Price = 59.99m,
                            Title = "Essential C#5.0"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Mark Wiens",
                            ISBN = "123-0-321-87758-1",
                            LocationName = "Ha Noi City",
                            PressId = 2,
                            Price = 49.99m,
                            Title = "Essential C#6.0"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Michelin",
                            ISBN = "234-0-321-87758-1",
                            LocationName = "Da Nang City",
                            PressId = 2,
                            Price = 33.99m,
                            Title = "Food Blog"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Steve Krug",
                            ISBN = "345-0-321-87758-1",
                            LocationName = "Quy Nhon City",
                            PressId = 3,
                            Price = 159.99m,
                            Title = "Don't Make Me Think"
                        });
                });

            modelBuilder.Entity("ODataBookStore.Models.Press", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Presses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = 0,
                            Name = "Addison-Wesley"
                        },
                        new
                        {
                            Id = 2,
                            Category = 1,
                            Name = "Addison-Mercedes"
                        },
                        new
                        {
                            Id = 3,
                            Category = 2,
                            Name = "John-Doe"
                        });
                });

            modelBuilder.Entity("ODataBookStore.Models.Book", b =>
                {
                    b.HasOne("ODataBookStore.Models.Address", "Location")
                        .WithMany("Books")
                        .HasForeignKey("LocationName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ODataBookStore.Models.Press", "Press")
                        .WithMany()
                        .HasForeignKey("PressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Press");
                });

            modelBuilder.Entity("ODataBookStore.Models.Address", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("ODataBookStore.Models.Role", b =>
            {
                b.Navigation("Account");
                b.Navigation("User");
            });
#pragma warning restore 612, 618
        }
    }
}
